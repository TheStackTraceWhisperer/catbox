spring:
  application:
    name: catbox

  # Docker Compose Profile - Azure SQL Edge and Kafka
  docker:
    compose:
      # Set enabled to true to enable Spring Boot's automatic Docker Compose lifecycle management
      # When enabled, Spring Boot will start/stop the services defined in compose.yaml
      # lifecycle-management: none disables automatic lifecycle management
      # Use 'docker compose up -d' manually to start services when needed
      enabled: false
      file: compose.yaml
      lifecycle-management: none

  # Note: The 'default' H2, JPA, and threads config is inherited from application.yml

  # Kafka configuration IS INHERITED from application.yml
  # We do NOT define a default spring.kafka.bootstrap-servers here as it conflicts
  # with the kafka.clusters map.

server:
  port: 8080

# Logging is inherited from application.yml

---
# Azure SQL Profile (when using docker-compose)
spring:
  config:
    activate:
      on-profile: azuresql

  datasource:
    url: jdbc:sqlserver://localhost:1433;database=catbox;encrypt=true;trustServerCertificate=true
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: sa
    password: YourStrong@Passw0rd

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServerDialect
    show-sql: true

  h2:
    console:
      enabled: false
