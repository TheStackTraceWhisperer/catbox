spring:
  application:
    name: catbox

  datasource:
    url: jdbc:h2:mem:catboxdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  threads:
    virtual:
      enabled: true

  # --- Kafka Configuration ---
  kafka:
    clusters:
      # --- Cluster A ---
      cluster-a:
        bootstrap-servers: localhost:9092
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer
          properties:
            linger.ms: 10
            acks: all
      # --- Cluster B ---
      cluster-b:
        bootstrap-servers: localhost:9093
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer
          properties:
            linger.ms: 10
            acks: all

# --- Routing and Factory Configuration ---
outbox:
  routing:
    rules:
      # map: eventType -> cluster-key
      OrderCreated: cluster-a
      OrderStatusChanged: cluster-a
      # e.g., InventoryEvent: cluster-b

  kafka:
    factory:
      # Timeouts for the dynamic factory
      idle-eviction-time-minutes: 30
      eviction-check-ms: 300000 # 5 minutes

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus,info,metrics
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.example.catbox: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
